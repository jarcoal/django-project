---
description: 
globs: *_admin.py
alwaysApply: false
---
# Django Admin Raw ID Fields

Always use `raw_id_fields` for foreign key fields in Django admin classes that could have many entries to prevent loading large dropdown lists.

## Do ✅

```python
# Good: Using raw_id_fields for foreign keys with many entries
from django.contrib import admin

@admin.register(EmailMessage)
class EmailMessageAdmin(admin.ModelAdmin):
    raw_id_fields = ['conversation', 'sender', 'recipient']
    list_display = ['message_id', 'conversation', 'sender']
```

## Don't ❌

```python
# Bad: Not using raw_id_fields for foreign keys with many entries
@admin.register(EmailMessage)
class EmailMessageAdmin(admin.ModelAdmin):
    list_display = ['message_id', 'conversation', 'sender']
    # Missing raw_id_fields for conversation, sender, and recipient
```

## Guidelines

1. Use `raw_id_fields` for any foreign key field that could have more than 100 entries
2. Common candidates for `raw_id_fields` include:
   - User/Profile references
   - Related models with many entries
   - Any foreign key that could grow large over time
3. The field will be replaced with a magnifying glass icon that opens a popup window for selection

## Benefits

1. **Performance**: Prevents loading large dropdown lists that can slow down the admin interface
2. **Usability**: Makes it easier to find specific entries in large datasets
3. **Scalability**: Admin interface remains responsive even as related tables grow 